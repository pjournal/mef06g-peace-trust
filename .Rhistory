# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "right") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down", legend.title = "") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down", legend.title = none()) +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down", legend.title = None) +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down", legend.title = "None") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "up") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "left") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "left", labs(title="x")) +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "right") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_color_discrete(name = "Agricultural Area (sq km)", labels = c("Label 1", "Label 2", "Label 3")) +
scale_size_discrete(name = "Agricultural Area (sq km)", labels = c("Label 4", "Label 5", "Label 6")) +
theme(legend.position = "right") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_color_discrete(name = "Agricultural Area (sq km)", labels = c("Label 1", "Label 2", "Label 3")) +
scale_size_discrete(name = "Agricultural Area/Area", labels = c("Label 4", "Label 5", "Label 6")) +
theme(legend.position = "right") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
left
, labs(title="x")
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "left") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "right") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "up") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "down") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "bottom") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
# Plot the Turkey province data
# Extract the data we're interested in
ggplot(data = turkey_tarim_area_21) +
geom_point(aes(x = Longitude, y =Latitude ,
color = -log10((Agricultural_Area*0.01/Area)*100),
size = Agricultural_Area,
label = Name), alpha = 0.6) +
scale_size(name = "Agricultural Area",
range = c(5, 15)) +
theme(legend.position = "up") +
labs(x = "longitude",
y = "latitude",
title = "Turkey: Agricultural Areas") +
geom_text(aes(x =Longitude , y =  Latitude, label = Name))
knitr::kable(head(df_area_to_ag),caption = "Density of Agricultural Areas (Agricultural Area/Area) to Total Areas - Top(10)")
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),TotalArea,rate_area=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(rate_area))
knitr::kable(head(df_province),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),Total_Agricultural_Area,rate_area=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(rate_area))
knitr::kable(head(df_province),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),Total_Agricultural_Area,AgrRatetoTotal=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(AgrRatetoTotal))
knitr::kable(head(df_province),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),Total_Agricultural_Area,AgrRatetoTotal=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(AgrRatetoTotal))
knitr::kable(head(df_province,10),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),Total_Agricultural_Area,AgrRatetoTotalAgr=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(AgrRatetoTotalAgr))
knitr::kable(head(df_province,10),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
knitr::opts_chunk$set(warning = FALSE)
Sys.setlocale(locale = "en_US.UTF-8")
options(dplyr.summarise.inform = FALSE)
options(scipen=999)
total_2021_area <- tarim %>%
filter(year==2021)%>%
group_by(year)%>%
summarise(TotalArea=sum(decare))
Total_Agricultural_Area <- total_2021_area$TotalArea
df_province <- tarim %>%
filter(year==2021)%>%
group_by(province_code,province) %>%
summarise(Agricultural_Area=sum(decare),Total_Agricultural_Area,AgrRatetoTotalAgr=round(Agricultural_Area/Total_Agricultural_Area,2))%>%
arrange(desc(AgrRatetoTotalAgr))
knitr::kable(head(df_province,10),caption = "Total Agricultural Areas (in Decare) by Province - 2021")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(rate_agricultre_to_area = Agricultural_Area*0.01/Area ,Agricultural_Area) %>%
arrange(desc(rate_agricultre_to_area))
knitr::kable(head(df_area_to_ag,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(,Agricultural_Area,rate_agricultre_to_area = Agricultural_Area*0.01/Area ) %>%
arrange(desc(rate_agricultre_to_area))
knitr::kable(head(df_area_to_ag,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(,Agricultural_Area,Rate_Agricultre_to_Area = Agricultural_Area*0.01/Area ) %>%
arrange(desc(Rate_Agricultre_to_Area))
knitr::kable(head(df_area_to_ag,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(Agricultural_Area,Density= Agricultural_Area*0.01/Area ) %>%
arrange(desc(Rate_Agricultre_to_Area))
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(Agricultural_Area,Density= Agricultural_Area*0.01/Area ) %>%
arrange(desc(Density))
knitr::kable(head(Density,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(Agricultural_Area,Density= Agricultural_Area*0.01/Area ) %>%
arrange(desc(Density))
knitr::kable(head(Density,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(Agricultural_Area,Rate_Agricultre_to_Area = Agricultural_Area*0.01/Area ) %>%
arrange(desc(Rate_Agricultre_to_Area))
knitr::kable(head(df_area_to_ag,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
turkey_tarim_area_21 = merge(turkey, df_province, by.x = 'Code', by.y = 'province_code')
df_area_to_ag <- turkey_tarim_area_21 %>%
group_by(province) %>%
summarise(Agricultural_Area,Density = Agricultural_Area*0.01/Area ) %>%
arrange(desc(Density))
knitr::kable(head(df_area_to_ag,10),caption = "Density of Agricultural Areas (Agricultural Area/Area) - Top(10)")
#install.packages("readxl")
#install.packages("ggrepel")
#install.packages("plotly")
library(plotly)
library(readxl)
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidyr)
library(ggrepel)
# Prepare data
tarim <- readRDS("data//tarim.rds")
meyve <- readRDS("data//meyve.rds")
sebze <- readRDS("data//sebze.rds")
tahil <- readRDS("data//tahil.rds")
regions <- readRDS("data//Regions.rds")
turkey <- readRDS("data//turkey.rds")
meyve
merge(meyve,sebzeid=province_code)
merge(meyve,sebze,id=province_code)
merge(meyve,sebze,id="province_code")
inner_join(meyve,sebze,by="province_code")
temp_join <- inner_join(meyve,sebze,by="province_code")
meyve_filtered <- meyve %>%
filter(year=2021 & unit=='Dekar'  & main_type=='Toplu Meyveliklerin Alanı')
meyve_filtered <- meyve %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Toplu Meyveliklerin Alanı')
sebze_filtered <- sebze %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Ekilen Alan')
tahil_filtered <- tahil %>%
filter(year==2021 & unit=='Dekar' & main_type=='Ekilen Alan')
temp_join <- inner_join(meyve_filtered,sebze_filtered,by="province_code")
meyve_filtered <- meyve %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Toplu Meyveliklerin Alanı')
sebze_filtered <- sebze %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Ekilen Alan')
tahil_filtered <- tahil %>%
filter(year==2021 & unit=='Dekar' & main_type=='Ekilen Alan')
temp_join <- inner_join(meyve_filtered,sebze_filtered,by="province_code")
final_join <- inner_join(temp_join,tahil_filtered,by="province_code")
head(final_join)
meyve_dekar <-
meyve %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Toplu Meyveliklerin Alanı')
total = sum(meyve_dekar[, 'production'],na.rm=TRUE)
grouped_data <- meyve_dekar %>%
group_by(product_name) %>%
summarise(TotalbyName = sum(production,na.rm=TRUE)) %>%
mutate(rate = round((TotalbyName/total)*100,4))
plot_data <- grouped_data %>%
mutate(rank = rank(-TotalbyName),
product_name = ifelse(rank <= 10, product_name, 'Other'))
p <- plot_ly(plot_data, labels = ~product_name, values = ~TotalbyName, type = 'pie',textposition = 'outside',textinfo = 'label+percent') %>%
layout(title = 'Top 10 Fruit Products (in Decare) in Turkey  in 2021',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
sebze_df <- sebze %>%
filter(year==2021 & unit=='Dekar'  & main_type=='Ekilen Alan')
total = sum(sebze_df [, 'decare'],na.rm=TRUE)
grouped_data <- sebze_df %>%
group_by(product_name) %>%
summarise(TotalbyName = sum(decare,na.rm=TRUE)) %>%
mutate(rate = round((TotalbyName/total)*100),4)
plot_data_v <- grouped_data %>%
mutate(rank = rank(-TotalbyName),
product_name = ifelse(rank <= 10, product_name, 'Other'))
p <- plot_ly(plot_data_v, labels = ~product_name, values = ~TotalbyName, type = 'pie',textposition = 'outside',textinfo = 'label+percent') %>%
layout(title = 'Top 10 Vegetable Products (in Decare) in Turkey  in 2021',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
tahil_df <-  tahil %>%
filter(year==2021 & unit=='Dekar' & main_type=='Ekilen Alan')
total = sum(tahil_df[, 'decare'],na.rm=TRUE)
grouped_data <- tahil_df %>%
filter(year==2021 & unit=='Dekar') %>%
group_by(product_name) %>%
summarise(TotalbyName = sum(decare,na.rm=TRUE)) %>%
mutate(rate = round((TotalbyName/total)*100),2)
plot_data_g <- grouped_data %>%
mutate(rank = rank(-TotalbyName),
product_name = ifelse(rank <= 10, product_name, 'Other'))
tahil_df <-  tahil %>%
filter(year==2021 & unit=='Dekar' & main_type=='Ekilen Alan')
total = sum(tahil_df[, 'decare'],na.rm=TRUE)
grouped_data <- tahil_df %>%
group_by(product_name) %>%
summarise(TotalbyName = sum(decare,na.rm=TRUE)) %>%
mutate(rate = round((TotalbyName/total)*100),2)
plot_data_g <- grouped_data %>%
mutate(rank = rank(-TotalbyName),
product_name = ifelse(rank <= 10, product_name, 'Other'))
p <- plot_ly(plot_data_g, labels = ~product_name, values = ~TotalbyName, type = 'pie',textposition = 'outside',textinfo = 'label+percent') %>%
layout(title = 'Top 10 Grain Products(as Decare) in Turkey in 2021',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
